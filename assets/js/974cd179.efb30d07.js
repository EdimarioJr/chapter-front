"use strict";(self.webpackChunkchapter_front=self.webpackChunkchapter_front||[]).push([[813],{3905:(e,o,a)=>{a.d(o,{Zo:()=>l,kt:()=>g});var t=a(7294);function n(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function r(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?r(Object(a),!0).forEach((function(o){n(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,t,n=function(e,o){if(null==e)return{};var a,t,n={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],o.indexOf(a)>=0||(n[a]=e[a]);return n}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=t.createContext({}),p=function(e){var o=t.useContext(m),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},l=function(e){var o=p(e.components);return t.createElement(m.Provider,{value:o},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},d=t.forwardRef((function(e,o){var a=e.components,n=e.mdxType,r=e.originalType,m=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=p(a),d=n,g=c["".concat(m,".").concat(d)]||c[d]||u[d]||r;return a?t.createElement(g,s(s({ref:o},l),{},{components:a})):t.createElement(g,s({ref:o},l))}));function g(e,o){var a=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=d;var i={};for(var m in o)hasOwnProperty.call(o,m)&&(i[m]=o[m]);i.originalType=e,i[c]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<r;p++)s[p]=a[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9903:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>m,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var t=a(7462),n=(a(7294),a(3905));const r={sidebar_position:7},s="Boas pr\xe1ticas React",i={unversionedId:"boas-praticas-react",id:"boas-praticas-react",title:"Boas pr\xe1ticas React",description:"O react \xe9 uma biblioteca open-source que tem como objetivo facilitar a constru\xe7\xe3o de peda\xe7os de UI atrav\xe9s da componentiza\xe7\xe3o e programa\xe7\xe3o declarativa.",source:"@site/docs/boas-praticas-react.md",sourceDirName:".",slug:"/boas-praticas-react",permalink:"/chapter-front/boas-praticas-react",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Boas pr\xe1ticas CSS",permalink:"/chapter-front/boas-praticas-css"},next:{title:"Versionando os projetos",permalink:"/chapter-front/versionando-projetos"}},m={},p=[],l={toc:p};function c(e){let{components:o,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},l,a,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"boas-pr\xe1ticas-react"},"Boas pr\xe1ticas React"),(0,n.kt)("p",null,"O react \xe9 uma biblioteca open-source que tem como objetivo facilitar a constru\xe7\xe3o de peda\xe7os de UI atrav\xe9s da componentiza\xe7\xe3o e programa\xe7\xe3o declarativa."),(0,n.kt)("p",null,"Vamos listar algumas dicas de como usar o react nos projetos loomi de forma satisfat\xf3ria. Se liga a\xed!"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Um componente por arquivo. Mantenha esse padr\xe3o para deixar os componentes mais facilmente localiz\xe1veis e evitar confus\xe3o. Al\xe9m disso, o c\xf3digo fica mais separado e mais f\xe1cil de ler."),(0,n.kt)("li",{parentName:"ol"},"Tente ao m\xe1ximo tirar a l\xf3gica do JSX. Isso facilita a leitura, e deixa a l\xf3gica separada do UI, o que \xe9 uma coisa muito importante!")),(0,n.kt)("p",null,"\u274c N\xe3o fa\xe7a isso"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"export const Component = () => {\n  return (\n    <div>\n      <button\n        onClick={() => {\n          const a = {};\n          const b = 4;\n          // ....\n          // ....\n        }}\n      >\n        Criar algo\n      </button>\n    </div>\n  );\n};\n")),(0,n.kt)("p",null,"\u2705 Fa\xe7a isso"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"export const Component = () => {\n  const handleSubmit = () => {\n    const a = {};\n    const b = 4;\n    // ....\n    // ....\n  };\n\n  return (\n    <div>\n      <button onClick={handleSubmit}>Criar algo</button>\n    </div>\n  );\n};\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Seguindo o mesmo ponto, tente desacoplar a l\xf3gica do componente atrav\xe9s de custom hooks, principalmente se voc\xea perceber que o componente est\xe1 muito grande ou que a l\xf3gica est\xe1 sendo usada em outros componentes."),(0,n.kt)("li",{parentName:"ol"},"Use fragments quando necess\xe1rio, ao inv\xe9s de elementos html que n\xe3o v\xe3o ter utilidade."),(0,n.kt)("li",{parentName:"ol"},"Use desestrutura\xe7\xe3o para receber as props"),(0,n.kt)("li",{parentName:"ol"},"Sempre PascalCase para componentes e tipos, e camelCase para o resto"),(0,n.kt)("li",{parentName:"ol"},"Use rest props para deixar o componente mais flex\xedvel e pra n\xe3o precisar declarar todas as props sempre.")),(0,n.kt)("p",null,"\u274c N\xe3o fa\xe7a isso"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'export const Component = ({ name }) => {\n// e se eu quiser mandar o resto das propriedades do elemento html? Eu vou ter que\n// declarar uma por uma?\n    return <input name={name} style="..."/>\n}\n// onChange e onBlur n\xe3o v\xe3o funcionar!\n<Component name="input" onChange={...} onBlur... />\n')),(0,n.kt)("p",null,"\u2705 Fa\xe7a isso"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},' export const Component = ({ name, ...restProps }) => {\n // Resolvido! Deixe o restProps depois de todas as outras props, pra deixar\n // o componente mais flex\xedvel!\n    return <input name={name} style="..." {...restProps}/>\n}\n// agora sim!\n <Component name="input" onChange={...} onBlur... />\n')),(0,n.kt)("ol",{start:8},(0,n.kt)("li",{parentName:"ol"},"Use children props para deixar seu componente mais flex\xedvel"),(0,n.kt)("li",{parentName:"ol"},"Aproveite o ",(0,n.kt)("strong",{parentName:"li"},"M\xe1ximo")," a componentiza\xe7\xe3o do react. Uma boca dica para isso \xe9 sempre tentar seguir o pr\xedncipio de responsabilidade \xfanica: Um componente deve ter uma \xfanica responsabilidade e 1 \xfanico motivo para ser mudado."),(0,n.kt)("li",{parentName:"ol"},"Evite prop drilling. Utilize context ou outra estrat\xe9gia"),(0,n.kt)("li",{parentName:"ol"},"Cuidado com renderiza\xe7\xf5es desnecess\xe1rias! Para isso, primeiro verifique onde est\xe1 o seu estado. Esse estado realmente precisa estar l\xe1? O estado sempre deve ficar no componente que est\xe1 realmente o usando. Ap\xf3s isso, verifique se n\xe3o cabe um useMemo, memo ou useCallback na situa\xe7\xe3o. ",(0,n.kt)("a",{parentName:"li",href:"https://kinsta.com/pt/blog/usecallback-react/#:~:text=useCallback%20vs%20usarMemo&text=A%20diferen%C3%A7a%20chave%20%C3%A9%20que,voc%C3%AA%20pode%20chamar%20mais%20tarde."},"Mais sobre useMemo e useCallback aqui")),(0,n.kt)("li",{parentName:"ol"},"Nunca esque\xe7a das keys nos componentes ao usar o map. \xc9 muito importante no processo de renderiza\xe7\xe3o do React. ",(0,n.kt)("a",{parentName:"li",href:"https://reactjs.org/docs/lists-and-keys.html"},"Mais aqui")),(0,n.kt)("li",{parentName:"ol"},"Aprenda alguns padr\xf5es de componentes react! ",(0,n.kt)("a",{parentName:"li",href:"https://www.uxpin.com/studio/blog/react-design-patterns/"},"Clica aqui"))),(0,n.kt)("p",null,"Como componentizar bem \xe9 uma das coisas mais importantes quando a gente usa o react, iremos resumir aqui um artigo bem legal do Dan Abramov sobre ",(0,n.kt)("a",{parentName:"p",href:"https://overreacted.io/writing-resilient-components/"},"Como construir componentes resilientes"),"\nVamos passar por 4 pr\xedncipios de design de componentes muito importantes:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"N\xe3o interrompa o fluxo de dados"),"\nQuando usamos algum componente, sempre esperamos que n\xf3s possamos passar diferentes valores para as props ao longo do tempo, e o componente sempre vai mudar de acordo com isso.")),(0,n.kt)("p",null,"Por\xe9m uma coisa que acontece muito \xe9 isso:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"const Component = ({ isLoading }) => {\n  const [loading, setLoading] = useState(isLoading);\n  // Mesmo se o isLoading mudar, depois da primeira renderiza\xe7\xe3o\n  // n\xe3o vai refletir no loading, ent\xe3o o fluxo de dados foi interrompido\n  return loading ? <div>Carregando</div> : <div>Normal</div>;\n};\n\nconst OtherComponent = () => {\n  const [loadingSomething, setLoadingSomething] = useState(false);\n\n  const changeLoading = () => {\n    setLoadingSomething(!loadingSomething);\n  };\n  // o loadingSomething muda, mas n\xe3o reflete no Component\n  return (\n    <div>\n      <button onClick={changeLoading}>clique aqui</button>\n      <Component isLoading={loadingSomething} />\n    </div>\n  );\n};\n")),(0,n.kt)("p",null,"Sempre deixe o fluxo de dados livre para um comportamento normal do componente. Se a props muda, o componente tamb\xe9m deve mudar para corresponder."),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Nenhum componente \xe9 um Singleton"))),(0,n.kt)("p",null,"As vezes n\xf3s supomos que certos componentes s\xf3 aparecem 1 vez, tipo uma Navbar. Mas acontece que nem sempre essa suposi\xe7\xe3o est\xe1 correta. Por exemplos, temos que animar uma transi\xe7\xe3o entre dois componentes do tipo Page. Para isso, duas Page precisam estar montadas na DOM. S\xf3 que dependendo de como fizemos esse componente, a Page pode assumir que ela \xe9 \xfanica no DOM, levando a bugs. Colocar ou esconder componentes n\xe3o deve quebrar sua aplica\xe7\xe3o."),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Mantenha o estado local isolado"))),(0,n.kt)("p",null,"Considere um componente Post. Esse componente tem uma lista de componentes Comment ( que podem ser expandidos ) e um input ",(0,n.kt)("inlineCode",{parentName:"p"},"NewComment"),"."),(0,n.kt)("p",null,"Alguns estados nesse exemplo ",(0,n.kt)("strong",{parentName:"p"},"PRECISAM")," ser compartilhados, mas outros, n\xe3o. Esses que n\xe3o necessitam s\xe3o chamados de estado local. N\xe3o \xe9 uma boa pr\xe1tica deixar estado local como global, por que isso deixa o c\xf3digo mais d\xedficil de ser lido e pode causar re-renderiza\xe7\xf5es desnecess\xe1rias."),(0,n.kt)("p",null,'Para identificar um estado local podemos fazer a pergunta: "Se esse componente for renderizado duas vezes, essa intera\xe7\xe3o deve refletir na outra c\xf3pia?". Se a resposta for n\xe3o, \xe9 um estado local.'),(0,n.kt)("p",null,"Exemplo: Imagine que temos dois componentes ",(0,n.kt)("inlineCode",{parentName:"p"},"Post")," montados:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Conte\xfado do post: se editarmos o conte\xfado de um post, n\xf3s iremos querer que isso se reflita no outro tamb\xe9m. Ent\xe3o n\xe3o \xe9 um estado local do Post."),(0,n.kt)("li",{parentName:"ol"},"Lista de coment\xe1rios ",(0,n.kt)("inlineCode",{parentName:"li"},"Comment"),". Se adicionarmos ou editarmos um coment\xe1rio, n\xf3s tamb\xe9m iremos querer que se reflita no outro Post. N\xe3o \xe9 um estado local."),(0,n.kt)("li",{parentName:"ol"},"Expans\xe3o dos ",(0,n.kt)("inlineCode",{parentName:"li"},"Comment"),": Seria estranho expandir um coment\xe1rio e o outro expandir junto. Portanto, esse \xe9 um estado local do ",(0,n.kt)("inlineCode",{parentName:"li"},"Comment"),"."),(0,n.kt)("li",{parentName:"ol"},"Valor do input ",(0,n.kt)("inlineCode",{parentName:"li"},"NewComment"),": Tamb\xe9m seria estranho que digit\xe1ssemos algo em um input, e outro tamb\xe9m fosse digitado automaticamente. Portanto, \xe9 um estado local de ",(0,n.kt)("inlineCode",{parentName:"li"},"NewComment"),".")),(0,n.kt)("p",null,"\xc9 isso, astronauta. Essa foi s\xf3 uma introdu\xe7\xe3o de como a gente usa React nos nossos projetos! Fique a vontade para perguntar e dar quaisquer sugest\xf5es."))}c.isMDXComponent=!0}}]);